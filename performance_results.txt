test_async_libraries_comparison (__main__.TestBenchmarkComparison.test_async_libraries_comparison)
Compare asynchronous HTTP libraries performance. ... ok
test_cold_vs_warm_requests (__main__.TestBenchmarkComparison.test_cold_vs_warm_requests)
Compare performance of first request vs subsequent requests. ... ok
test_different_http_methods_performance (__main__.TestBenchmarkComparison.test_different_http_methods_performance)
Compare performance of different HTTP methods with RequestX. ... ok
test_memory_efficiency_comparison (__main__.TestBenchmarkComparison.test_memory_efficiency_comparison)
Compare memory efficiency across different libraries. ... ok
test_requestx_async_vs_sync_comprehensive (__main__.TestBenchmarkComparison.test_requestx_async_vs_sync_comprehensive)
Comprehensive comparison of RequestX async vs sync performance. ... 
Asynchronous HTTP Libraries Comparison
======================================
+----------------+---------------+-------+-----------------+---------------+---------+-------------+----------+
| Library        |   Concurrency |   RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+================+===============+=======+=================+===============+=========+=============+==========+
| aiohttp        |             5 | 784.1 |             1.3 |           0.1 |    67.5 | 100.0%      |        0 |
+----------------+---------------+-------+-----------------+---------------+---------+-------------+----------+
| requestx_async |             5 | 299   |             3.3 |           2.3 |    50.9 | 100.0%      |        0 |
+----------------+---------------+-------+-----------------+---------------+---------+-------------+----------+
| httpx_async    |             5 |  50.7 |            19.7 |           8.1 |    78.6 | 100.0%      |        0 |
+----------------+---------------+-------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library      RPS Diff %    Memory Diff %    Time Diff %
-----------  ------------  ---------------  -------------
aiohttp      +162.2%       -94.5%           -61.9%
httpx_async  -83.0%        +253.4%          +489.8%
Cold request time: 0.002s
Average warm request time: 0.001s

HTTP Methods Performance Comparison
===================================
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library   |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===========+===============+========+=================+===============+=========+=============+==========+
| PUT       |             1 | 1494.8 |             0.7 |             0 |    72.7 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| DELETE    |             1 | 1308.4 |             0.8 |             0 |    69.3 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| PATCH     |             1 | 1208.7 |             0.8 |             0 |    65.8 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| GET       |             1 | 1189.5 |             0.8 |             0 |    76.5 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| POST      |             1 |  999   |             1   |             0 |    62.4 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Memory Efficiency Comparison
============================
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library        |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+================+===============+========+=================+===============+=========+=============+==========+
| requestx_async |             5 | 2228.2 |             0.4 |           0   |    74.7 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx       |             1 | 1175.3 |             0.8 |           0   |    54.5 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests       |             1 |  560.5 |             1.8 |           0   |    55.9 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx          |             1 |   69.6 |            14.4 |           2.6 |    76.9 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library    RPS Diff %    Memory Diff %    Time Diff %
---------  ------------  ---------------  -------------
requests   -52.3%        +0.0%            +110.3%
httpx      -94.1%        +16500.0%        +1593.8%

=== RequestX Comprehensive Async vs Sync Analysis ===

--- Single Request Scenario ---

Single Request - Sync vs Async
==============================
+-------------------------------+---------------+-------+-----------------+---------------+---------+-------------+----------+
| Library                       |   Concurrency |   RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===============================+===============+=======+=================+===============+=========+=============+==========+
| requestx_sync_single_request  |             1 | 388   |             2.6 |             0 |    73.1 | 100.0%      |        0 |
+-------------------------------+---------------+-------+-----------------+---------------+---------+-------------+----------+
| requestx_async_single_request |             1 | 322.6 |             3.1 |             0 |    51.7 | 100.0%      |        0 |
+-------------------------------+---------------+-------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:

Single Request Analysis:
  Sync:  388.0 RPS, 2.6ms avg
  Async: 322.6 RPS, 3.1ms avg
  Async RPS improvement: -16.9%
  Async time improvement: -20.4%

--- Multiple Sequential Scenario ---

Multiple Sequential - Sync vs Async
===================================
+------------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library                            |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+====================================+===============+========+=================+===============+=========+=============+==========+
| requestx_async_multiple_sequential |             5 | 1665.5 |             0.6 |             0 |    66   | 100.0%      |        0 |
+------------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_sync_multiple_sequential  |             1 |  652.8 |             1.5 |             0 |    31.7 | 100.0%      |        0 |
+------------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:

Multiple Sequential Analysis:
  Sync:  652.8 RPS, 1.5ms avg
  Async: 1665.5 RPS, 0.6ms avg
  Async RPS improvement: +155.1%
  Async time improvement: +60.7%

--- JSON Processing Scenario ---

JSON Processing - Sync vs Async
===============================
+--------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library                        |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+================================+===============+========+=================+===============+=========+=============+==========+
| requestx_sync_json_processing  |             1 | 1526.9 |             0.7 |             0 |    67.6 | 100.0%      |        0 |
+--------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_async_json_processing |             3 | 1068.1 |             0.9 |             0 |    59.4 | 100.0%      |        0 |
+--------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:

JSON Processing Analysis:
  Sync:  1526.9 RPS, 0.7ms avg
  Async: 1068.1 RPS, 0.9ms avg
  Async RPS improvement: -30.0%
  Async time improvement: -43.5%

--- Mixed Methods Scenario ---

Mixed Methods - Sync vs Async
=============================
FAIL
test_sync_libraries_comparison (__main__.TestBenchmarkComparison.test_sync_libraries_comparison)
Compare synchronous HTTP libraries performance. ... ok
test_async_concurrency_comparison (__main__.TestConcurrencyBenchmarks.test_async_concurrency_comparison)
Compare async HTTP libraries with true concurrent execution. ... ok
test_concurrency_comparison_large (__main__.TestConcurrencyBenchmarks.test_concurrency_comparison_large)
Compare libraries with 1000 concurrent requests (stress test). ... ok
test_concurrency_comparison_medium (__main__.TestConcurrencyBenchmarks.test_concurrency_comparison_medium)
Compare libraries with 100 concurrent requests. ... ok
test_concurrency_comparison_small (__main__.TestConcurrencyBenchmarks.test_concurrency_comparison_small)
Compare libraries with 10 concurrent requests. ... ok
test_concurrency_scaling_analysis (__main__.TestConcurrencyBenchmarks.test_concurrency_scaling_analysis)
Analyze how each library scales with increasing concurrency. ... +------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library                      |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+==============================+===============+========+=================+===============+=========+=============+==========+
| requestx_sync_mixed_methods  |             1 | 2112.4 |             0.8 |             0 |    59.2 | 20.0%       |        2 |
+------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_async_mixed_methods |             3 | 2052   |             0.5 |             0 |    76.4 | 100.0%      |        0 |
+------------------------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:

Mixed Methods Analysis:
  Sync:  2112.4 RPS, 0.8ms avg
  Async: 2052.0 RPS, 0.5ms avg
  Async RPS improvement: -2.9%
  Async time improvement: +38.1%

Synchronous HTTP Libraries Comparison
=====================================
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library   |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===========+===============+========+=================+===============+=========+=============+==========+
| requestx  |             1 | 1829.1 |             0.5 |           0   |    43.7 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests  |             1 |  586.2 |             1.7 |           0   |    45.3 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx     |             1 |   68.3 |            14.6 |           2.3 |    75.3 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library    RPS Diff %    Memory Diff %    Time Diff %
---------  ------------  ---------------  -------------
requests   -68.0%        +0.0%            +212.8%
httpx      -96.3%        +0.0%            +2586.5%

=== Async Concurrency Comparison ===

Async Concurrency Performance
=============================
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library        |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+================+===============+========+=================+===============+=========+=============+==========+
| aiohttp        |            20 | 1536.7 |             0.7 |           0.1 |    80.9 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_async |            20 | 1423.3 |             0.7 |           0.9 |    53.4 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_async    |            20 |   86.8 |            11.5 |          10.7 |    96.1 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library      RPS Diff %    Memory Diff %    Time Diff %
-----------  ------------  ---------------  -------------
aiohttp      +8.0%         -85.0%           -7.4%
httpx_async  -93.9%        +1040.0%         +1539.1%

=== Concurrency Stress Test: 10 concurrent, 100 total requests ===

Concurrency 10 Stress Test
==========================
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library   |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===========+===============+========+=================+===============+=========+=============+==========+
| requests  |            10 | 1908.7 |             4.8 |           0   |   106.2 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx  |            10 | 1744.5 |             1.3 |          -0.7 |    36.3 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx     |            10 |    9.8 |          1014.2 |          11.6 |   971.1 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library    RPS Diff %    Memory Diff %    Time Diff %
---------  ------------  ---------------  -------------
requests   +9.4%         +0.0%            +260.6%
httpx      -99.4%        +0.0%            +75577.3%

=== Concurrency Test: 100 concurrent, 200 total requests ===

Concurrency 100 Performance
===========================
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library   |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===========+===============+========+=================+===============+=========+=============+==========+
| requests  |           100 | 2030.3 |            13.2 |           1.1 |   128.6 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx  |           100 | 1669.4 |             0.6 |           0.1 |    28   | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx     |           100 |    8.2 |         12009.4 |         145.7 |  1087.9 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library    RPS Diff %    Memory Diff %    Time Diff %
---------  ------------  ---------------  -------------
requests   +21.6%        +1050.0%         +2245.3%
httpx      -99.5%        +155316.7%       +2128134.1%

=== Concurrency Test: 10 concurrent, 50 total requests ===

Concurrency 10 Performance
==========================
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library   |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===========+===============+========+=================+===============+=========+=============+==========+
| requests  |            10 | 1906.5 |             4.5 |             0 |   106.2 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx  |            10 | 1723.4 |             0.7 |            -1 |    80.5 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx     |            10 |    9.5 |          1043.8 |             0 |   979.7 | 100.0%      |        0 |
+-----------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library    RPS Diff %    Memory Diff %    Time Diff %
---------  ------------  ---------------  -------------
requests   +10.6%        +0.0%            +510.3%
httpx      -99.4%        +0.0%            +142189.0%

=== Concurrency Scaling Analysis ===

Testing concurrency level: 1

Testing concurrency level: 10

Testing concurrency level: 50

Concurrency Scaling Analysis
============================
ok
test_concurrent_vs_sequential_comparison (__main__.TestConcurrencyBenchmarks.test_concurrent_vs_sequential_comparison)
Compare concurrent vs sequential performance across multiple concurrency levels. ... +--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library      |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+==============+===============+========+=================+===============+=========+=============+==========+
| requests_c50 |            50 | 1950.4 |             6.7 |             0 |   122.3 | 100.0%      |        0 |
+--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c50 |            50 | 1746.7 |             0.5 |             0 |    29.9 | 100.0%      |        0 |
+--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c10 |            10 | 1673.6 |             5.2 |             0 |   103.8 | 100.0%      |        0 |
+--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c1  |             1 | 1605.6 |             0.6 |             0 |    39.7 | 100.0%      |        0 |
+--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c10 |            10 | 1538.3 |             0.9 |             0 |    28   | 100.0%      |        0 |
+--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c1  |             1 |  636.9 |             1.5 |             0 |    36.6 | 100.0%      |        0 |
+--------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
Library       RPS Diff %    Memory Diff %    Time Diff %
------------  ------------  ---------------  -------------
requests_c50  +21.5%        +0.0%            +993.1%
requests_c10  +4.2%         +0.0%            +759.8%
requests_c1   -60.3%        +0.0%            +153.0%

Scaling Analysis:

REQUESTX Scaling:
  Concurrency 1: 1605.6 RPS, 0.6ms avg, 100.0% success
  Concurrency 10: 1538.3 RPS, 0.9ms avg, 100.0% success
  Concurrency 50: 1746.7 RPS, 0.5ms avg, 100.0% success

REQUESTS Scaling:
  Concurrency 1: 636.9 RPS, 1.5ms avg, 100.0% success
  Concurrency 10: 1673.6 RPS, 5.2ms avg, 100.0% success
  Concurrency 50: 1950.4 RPS, 6.7ms avg, 100.0% success

=== Concurrent vs Sequential Comparison (100 total requests) ===

Testing concurrency level: 1

Testing concurrency level: 10

Testing concurrency level: 20

Testing concurrency level: 30

Testing concurrency level: 40

Testing concurrency level: 50

Testing concurrency level: 100

Sequential vs Concurrent Performance
====================================
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library       |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+===============+===============+========+=================+===============+=========+=============+==========+
| requests_c10  |            10 | 2061.1 |             4.5 |           0   |   109.9 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c100 |           100 | 2054.3 |             8.3 |           0   |   129.5 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c20  |            20 | 2013.9 |             7.9 |           0   |   114.2 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c1   |             1 | 2006.9 |             0.5 |           0   |    20.4 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c30  |            30 | 2005.6 |             9.6 |           0   |   122.1 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c40  |            40 | 1964.9 |             9.5 |           0   |   122.8 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c50  |            50 | 1929.2 |             8.1 |           0   |   126   | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c100 |           100 | 1766.9 |             0.5 |           0   |    52.6 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c20  |            20 | 1721.5 |             0.8 |           0   |    33.7 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c30  |            30 | 1643.8 |             0.6 |           0   |    36.4 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c10  |            10 | 1584.8 |             1.2 |           0   |    24.7 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c40  |            40 | 1506.6 |             0.6 |           0   |    46.8 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_c50  |            50 | 1390.4 |             0.7 |           0   |    31   | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requests_c1   |             1 |  754.3 |             1.3 |           0   |    37.8 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c1      |             1 |   65.5 |            15.3 |           2.6 |    74.6 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c10     |            10 |    9.7 |          1025.9 |           1.2 |   975.6 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c30     |            30 |    8.3 |          3424.8 |          31.2 |  1091.5 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c20     |            20 |    8.2 |          2438.1 |          10.8 |  1090.6 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c50     |            50 |    7.8 |          6276.4 |          61.1 |  1115.7 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c100    |           100 |    7.6 |         13071.2 |          57.5 |  1130.9 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| httpx_c40     |            40 |    7.5 |          4840.9 |          28.8 |  1134.9 | 100.0%      |        0 |
+---------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:
ok
test_sync_vs_async_requestx_comparison (__main__.TestConcurrencyBenchmarks.test_sync_vs_async_requestx_comparison)
Compare RequestX sync vs async performance. ... ok
test_large_response_memory_efficiency (__main__.TestMemoryUsage.test_large_response_memory_efficiency)
Test memory efficiency with large responses. ... ok
test_response_memory_cleanup (__main__.TestMemoryUsage.test_response_memory_cleanup)
Test that response objects don't leak memory. ... ok
test_large_response_handling (__main__.TestPerformanceBasics.test_large_response_handling)
Test handling of large responses. ... ok
test_multiple_requests_performance (__main__.TestPerformanceBasics.test_multiple_requests_performance)
Test performance of multiple sequential requests. ... ok
test_request_response_time (__main__.TestPerformanceBasics.test_request_response_time)
Test that requests complete within reasonable time. ... ok
test_timeout_performance (__main__.TestPerformanceBasics.test_timeout_performance)
Test that timeouts work correctly and don't hang. ... ok

======================================================================
FAIL: test_requestx_async_vs_sync_comprehensive (__main__.TestBenchmarkComparison.test_requestx_async_vs_sync_comprehensive)
Comprehensive comparison of RequestX async vs sync performance.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/qunfei.wu/Projects/requestx/tests/test_performance.py", line 796, in test_requestx_async_vs_sync_comprehensive
    self.assertGreaterEqual(
AssertionError: 0.2 not greater than or equal to 0.8 : requestx_sync_mixed_methods had low success rate

----------------------------------------------------------------------
Ran 19 tests in 119.922s

FAILED (failures=1)
Library        RPS Diff %    Memory Diff %    Time Diff %
-------------  ------------  ---------------  -------------
requests_c10   +2.7%         +0.0%            +809.9%
requests_c100  +2.4%         +0.0%            +1588.2%
requests_c20   +0.4%         +0.0%            +1515.4%
requests_c30   -0.1%         +0.0%            +1856.8%
requests_c40   -2.1%         +0.0%            +1843.9%
requests_c50   -3.9%         +0.0%            +1555.8%
requests_c1    -62.4%        +0.0%            +165.6%
httpx_c1       -96.7%        +0.0%            +3015.7%
httpx_c10      -99.5%        +0.0%            +209329.6%
httpx_c30      -99.6%        +0.0%            +699077.2%
httpx_c20      -99.6%        +0.0%            +497631.4%
httpx_c50      -99.6%        +0.0%            +1281223.8%
httpx_c100     -99.6%        +0.0%            +2668390.5%
httpx_c40      -99.6%        +0.0%            +988184.5%

Concurrency Scaling Analysis:

REQUESTX Performance by Concurrency:
  Concurrency     RPS    Avg Time (ms)    CPU %  Success %
-------------  ------  ---------------  -------  -----------
            1  2006.9              0.5     20.4  100.0%
           10  1584.8              1.2     24.7  100.0%
           20  1721.5              0.8     33.7  100.0%
           30  1643.8              0.6     36.4  100.0%
           40  1506.6              0.6     46.8  100.0%
           50  1390.4              0.7     31    100.0%
          100  1766.9              0.5     52.6  100.0%
Best RPS for REQUESTX: 2006.9 at concurrency 1

REQUESTS Performance by Concurrency:
  Concurrency     RPS    Avg Time (ms)    CPU %  Success %
-------------  ------  ---------------  -------  -----------
            1   754.3              1.3     37.8  100.0%
           10  2061.1              4.5    109.9  100.0%
           20  2013.9              7.9    114.2  100.0%
           30  2005.6              9.6    122.1  100.0%
           40  1964.9              9.5    122.8  100.0%
           50  1929.2              8.1    126    100.0%
          100  2054.3              8.3    129.5  100.0%
Best RPS for REQUESTS: 2061.1 at concurrency 10

HTTPX Performance by Concurrency:
  Concurrency    RPS    Avg Time (ms)    CPU %  Success %
-------------  -----  ---------------  -------  -----------
            1   65.5             15.3     74.6  100.0%
           10    9.7           1025.9    975.6  100.0%
           20    8.2           2438.1   1090.6  100.0%
           30    8.3           3424.8   1091.5  100.0%
           40    7.5           4840.9   1134.9  100.0%
           50    7.8           6276.4   1115.7  100.0%
          100    7.6          13071.2   1130.9  100.0%
Best RPS for HTTPX: 65.5 at concurrency 1

Library Comparison at Key Concurrency Levels:

Concurrency 1:
  requestx  :   2006.9 RPS,    0.5ms, 100.0% success
  requests  :    754.3 RPS,    1.3ms, 100.0% success
  httpx     :     65.5 RPS,   15.3ms, 100.0% success

Concurrency 10:
  requests  :   2061.1 RPS,    4.5ms, 100.0% success
  requestx  :   1584.8 RPS,    1.2ms, 100.0% success
  httpx     :      9.7 RPS, 1025.9ms, 100.0% success

Concurrency 50:
  requests  :   1929.2 RPS,    8.1ms, 100.0% success
  requestx  :   1390.4 RPS,    0.7ms, 100.0% success
  httpx     :      7.8 RPS, 6276.4ms, 100.0% success

Concurrency 100:
  requests  :   2054.3 RPS,    8.3ms, 100.0% success
  requestx  :   1766.9 RPS,    0.5ms, 100.0% success
  httpx     :      7.6 RPS, 13071.2ms, 100.0% success

=== RequestX Sync vs Async Comparison ===

RequestX Sync vs Async Performance
==================================
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| Library        |   Concurrency |    RPS |   Avg Time (ms) |   Memory (MB) |   CPU % | Success %   |   Errors |
+================+===============+========+=================+===============+=========+=============+==========+
| requestx_async |            10 | 1916   |             0.5 |           0.2 |    82.2 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+
| requestx_sync  |             1 | 1433.1 |             0.7 |           0   |    90.1 | 100.0%      |        0 |
+----------------+---------------+--------+-----------------+---------------+---------+-------------+----------+

Performance vs RequestX Baseline:

RequestX Async vs Sync Performance:
  Sync RPS:  1433.1
  Async RPS: 1916.0
  Difference: +33.7%
  → Async shows significant performance advantage
5 sequential requests took 0.00 seconds
