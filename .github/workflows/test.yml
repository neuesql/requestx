name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run Rust tests
      run: cargo test --verbose

    - name: Build package
      run: uv run maturin develop

    - name: Verify import
      run: |
        uv run python -c "import requestx; print('Import successful')"

    - name: Run Python tests
      run: |
        uv run python -m unittest discover tests/ -v

    - name: Check formatting (Rust)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: cargo fmt --check

    - name: Run clippy
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: cargo clippy -- -D warnings

  build-test:
    name: Test wheel building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install maturin (Linux)
      if: runner.os == 'Linux'
      run: uv tool install maturin[patchelf]

    - name: Install maturin (Non-Linux)
      if: runner.os != 'Linux'
      run: uv tool install maturin

    - name: Build wheel
      run: uv run maturin build --release --strip

    - name: Build sdist
      run: uv run maturin sdist